#!/bin/sh

## Creato da LittleHacker 2013

## NASM Compile
# nasm -f elf32 loader/<name_file_input(.S o .asm)> -o $build/<name_file_output.o>

## C Compile
# gcc $opt <name_file_input.c> -o $build/<name_file_output.o>

## C++ Compile
# g++ $opt <name_file_input(.cc o .cpp) -o $build/<name_file_output.o>

## LD Link
# ld -m elf_i386 -T <name_file_link.ld> -o <name_file_output.bin> \
# 							$build/<name_files_input.o> ... \
#							... ...

echo "Setto i tools..."
export PATH=${PATH}:/usr/local/bin
build=objs
img=out
temp=tmp
opt="-m32 -Wall -O -fstrength-reduce -fomit-frame-pointer -nostdinc -fno-builtin -I./kernel/include -fno-strict-aliasing -fno-common -std=gnu99 -fno-stack-protector -c"

echo "Creo le cartelle..."
mkdir -p $build || exit
mkdir -p $temp || exit

echo "Compilazione (ASM) Loader..."
# ASM loader
nasm -f elf32 loader/loader.S -o $build/loader.o

echo "Compilazione (C) Kernel..."
# C kernel
gcc $opt kernel/kernel.c -o $build/kernel.o

echo "Compilazione (C) Shell..."
# C shell
gcc $opt kernel/shell/shell.c -o $build/shell.o

echo "Compilazione (C) Misc..."
# C misc
gcc $opt kernel/misc/console.c -o $build/console.o
gcc $opt kernel/misc/io.c -o $build/io.o
gcc $opt kernel/misc/log.c -o $build/log.o

echo "Compilazione (C) Lib..."
# C lib
gcc $opt kernel/lib/random.c -o $build/random.o
gcc $opt kernel/lib/string.c -o $build/string.o
gcc $opt kernel/lib/timer.c -o $build/timer.o
gcc $opt kernel/lib/stdio.c -o $build/stdio.o

echo "Compilazione (C) Drivers..."
# C drivers
gcc $opt kernel/drivers/kb.c -o $build/kb.o
gcc $opt kernel/drivers/mouse.c -o $build/mouse.o
gcc $opt kernel/drivers/video.c -o $build/video.o

gcc $opt kernel/drivers/rtc.c -o $build/rtc.o 
gcc $opt kernel/drivers/speaker.c -o $build/speaker.o
gcc $opt kernel/drivers/rdtsc.c -o $build/rdtsc.o

echo "Compilazione (C) int(e)r(rupt)..."
# C int(e)r(rupt)
gcc $opt kernel/intr/gdt.c -o $build/gdt.o
gcc $opt kernel/intr/idt.c -o $build/idt.o
gcc $opt kernel/intr/irq.c -o $build/irq.o
gcc $opt kernel/intr/isrs.c -o $build/isrs.o

echo "Linking..."
# LD linking
ld -m elf_i386 -T linker/linker.ld -o kernel.bin \
				        $build/kernel.o $build/shell.o \
					$build/console.o $build/io.o $build/log.o \
					$build/random.o $build/string.o $build/timer.o $build/stdio.o \
					$build/kb.o $build/mouse.o $build/video.o $build/rtc.o $build/speaker.o $build/rdtsc.o \
					$build/gdt.o $build/idt.o $build/irq.o $build/isrs.o

echo "Linking terminato"

echo "Compilazione terminata"

echo "Richiedo permessi per smontare la cartella \"tmp\" (per sicurezza)"
sudo umount $temp

echo "Richiedo permessi per montare la cartella \"tmp\""
sudo mount -o loop $img/os.img $temp || exit

sleep 0.5 || exit

echo "Richiedo permessi per copiare il file nella cartella \"tmp\""
sudo cp kernel.bin $temp/kernel.bin || exit

sleep 0.2 || exit

echo "Richiedo i permessi per smontare la cartella \"tmp\""
sudo umount $temp || exit

sleep 0.5 || exit

echo "Elimino il file *.bin"
rm kernel.bin || exit

echo "Elimino files *.o"
rm $build/*.o || exit

echo "Elimino le cartelle create"
rmdir $build || exit
rmdir $temp || exit

echo "Completato"

echo "Avvio OS con QEMU"
qemu-system-x86_64 -fda $img/os.img
